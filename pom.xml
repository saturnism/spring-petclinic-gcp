<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework.samples</groupId>
    <artifactId>spring-petclinic-gcp</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <packaging>pom</packaging>

    <modules>
        <module>spring-petclinic-api-gateway</module>
        <module>spring-petclinic-customers-service</module>
        <module>spring-petclinic-vets-service</module>
        <module>spring-petclinic-visits-service</module>
        <!--
        <module>spring-petclinic-admin-server</module>
        -->
    </modules>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <!-- BOMs -->
        <spring-boot.version>2.0.1.RELEASE</spring-boot.version>
        <sleuth.version>2.0.0.M9</sleuth.version>
        <spring-cloud.version>Finchley.M9</spring-cloud.version>
        <!--
        <spring-cloud-gcp.version>1.0.0.M3</spring-cloud-gcp.version>
        -->
        <spring-cloud-gcp.version>1.0.0.BUILD-SNAPSHOT</spring-cloud-gcp.version>

        <!-- Library versions -->
        <assertj.version>3.9.0</assertj.version>
        <guava.version>24.1-jre</guava.version>
        <logback-json-classic.version>0.1.5</logback-json-classic.version>

        <!-- Plugins -->
        <docker.plugin.version>1.4.0</docker.plugin.version>
        <docker.image.prefix>saturnism</docker.image.prefix>
        <docker.image.tag>latest</docker.image.tag>
        <docker.image.exposed.port>8080</docker.image.exposed.port>
        <docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>

        <jar.plugin.version>3.1.0</jar.plugin.version>
        <dependency.plugin.version>3.1.0</dependency.plugin.version>
        <git-commit-id.plugin.version>2.2.4</git-commit-id.plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-sleuth-dependencies</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${sleuth.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-gcp-dependencies</artifactId>
                <version>${spring-cloud-gcp.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback.contrib</groupId>
                <artifactId>logback-json-classic</artifactId>
                <version>${logback-json-classic.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>spring-milestone</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>springboot</id>
            <activation>
                <file>
                    <!-- Just a way to identify a Spring Boot application -->
                    <exists>src/main/resources/application.yml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring-boot.version}</version>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <encoding.source>${project.build.sourceEncoding}</encoding.source>
                                <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                                <java.source>${maven.compiler.source}</java.source>
                                <java.target>${maven.compiler.target}</java.target>
                            </additionalProperties>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>${jar.plugin.version}</version>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <classpathPrefix>lib/</classpathPrefix>
                                    <mainClass>${main.class}</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>

                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${dependency.plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <overWriteReleases>false</overWriteReleases>
                                    <includeScope>runtime</includeScope>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <version>${git-commit-id.plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <verbose>true</verbose>
                            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                            </generateGitPropertiesFilename>
                            <injectAllReactorProjects>true</injectAllReactorProjects>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>

        <profile>
            <id>buildDocker</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-resources-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-resources</id>
                                    <phase>process-resources</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${docker.image.dockerfile.dir}</directory>
                                                <includes>
                                                    <include>Dockerfile</include>
                                                    <include>.dockerignore</include>
                                                    <include>start.sh</include>
                                                </includes>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>

                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>dockerfile-maven-plugin</artifactId>
                            <version>${docker.plugin.version}</version>
                            <executions>
                                <execution>
                                    <id>tag</id>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>build</goal>
                                        <goal>tag</goal>
                                        <goal>push</goal>
                                    </goals>
                                    <configuration>
                                        <tag>${docker.image.tag}</tag>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>latest</id>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>tag</goal>
                                        <goal>push</goal>
                                    </goals>
                                    <configuration>
                                        <tag>latest</tag>
                                    </configuration>
                                </execution>
                            </executions>
                            <configuration>
                                <repository>${docker.image.prefix}/gcp-${project.artifactId}</repository>
                                <pullNewerImage>true</pullNewerImage>
                                <contextDirectory>${project.build.directory}/</contextDirectory>

                                <buildArgs>
                                    <ARTIFACT_FILE>${project.build.finalName}.${project.packaging}</ARTIFACT_FILE>
                                    <SERVICE_NAME>${project.artifactId}</SERVICE_NAME>
                                    <SERVICE_VERSION>${project.version}</SERVICE_VERSION>
                                    <EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
                                </buildArgs>

                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
